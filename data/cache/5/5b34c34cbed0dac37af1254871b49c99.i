a:332:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:3:"CLR";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:"C# just a part of CLR (Common Language Runtime)";}i:2;i:19;}i:5;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:66;}i:6;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:66;}i:7;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:66;}i:8;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:74:"Утилита CLRVer.exe позволяет узнать версию CLR";}i:2;i:72;}i:9;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:146;}i:10;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:146;}i:11;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:152;}i:12;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:20:"Загрузка CLR";i:1;i:2;i:2;i:152;}i:2;i:152;}i:13;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:152;}i:14;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:152;}i:15;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:257:"Параметр командной строки /platform предназначен для указания версии целевой платформы. Также это можно сделать в списке Platform Target на вкладке Build";}i:2;i:185;}i:16;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:442;}i:17;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:442;}i:18;a:3:{i:0;s:10:"listo_open";i:1;a:0:{}i:2;i:447;}i:19;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:447;}i:20;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:447;}i:21;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:167:" В зависимости от платформы генерируется заголовок PE32. Для анализа изпользуются 2 утилиты - ";}i:2;i:451;}i:22;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:618;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:"DumpBun.exe и CorFlags.exe";}i:2;i:620;}i:24;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:647;}i:25;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:649;}i:26;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:649;}i:27;a:3:{i:0;s:11:"listo_close";i:1;a:0:{}i:2;i:649;}i:28;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:649;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:428:"Также при запуске .exe - Windows анализирует заголовок .exe для определения, какое адресное пространство требуется (32 или 64). Если значение параметра /platform == x86, а запускается приложение для 64 разрядное, то выполняется приложение в 64х среде WOW64.";}i:2;i:650;}i:30;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1078;}i:31;a:3:{i:0;s:10:"listo_open";i:1;a:0:{}i:2;i:1078;}i:32;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1078;}i:33;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1078;}i:34;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:156:" Далее в это адресное пространство загружается библиотека MSCorEE.dll (каталог System32/SysWoW64). ";}i:2;i:1082;}i:35;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1238;}i:36;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1238;}i:37;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1238;}i:38;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1238;}i:39;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:179:" Далее основной поток вызывает в MSCoreEE.dll метод инициализирующий CLR, загружает exe, затем вызывает Main.";}i:2;i:1242;}i:40;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1421;}i:41;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1421;}i:42;a:3:{i:0;s:11:"listo_close";i:1;a:0:{}i:2;i:1421;}i:43;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1422;}i:44;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"CLR features";i:1;i:3;i:2;i:1422;}i:2;i:1422;}i:45;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1422;}i:46;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:1444;}i:47;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1444;}i:48;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1444;}i:49;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:" Memory management";}i:2;i:1448;}i:50;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1466;}i:51;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1466;}i:52;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1466;}i:53;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1466;}i:54;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:" Assembly loading";}i:2;i:1470;}i:55;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1487;}i:56;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1487;}i:57;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1487;}i:58;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1487;}i:59;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" Security";}i:2;i:1491;}i:60;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1500;}i:61;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1500;}i:62;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1500;}i:63;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1500;}i:64;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:" Exception handling";}i:2;i:1504;}i:65;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1523;}i:66;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1523;}i:67;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1523;}i:68;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1523;}i:69;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:" Thread synchronization";}i:2;i:1527;}i:70;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1550;}i:71;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1550;}i:72;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1550;}i:73;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1550;}i:74;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:48:"!This features are available to any CLR language";}i:2;i:1551;}i:75;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1599;}i:76;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1601;}i:77;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:43:"Process of compilation into MANAGED MODULES";i:1;i:2;i:2;i:1601;}i:2;i:1601;}i:78;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1601;}i:79;a:3:{i:0;s:10:"listo_open";i:1;a:0:{}i:2;i:1656;}i:80;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1656;}i:81;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1656;}i:82;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:39:" Source code (Исходный код) ";}i:2;i:1660;}i:83;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1699;}i:84;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:50:"can be written in any languagge that supports CLR.";}i:2;i:1701;}i:85;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1751;}i:86;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1753;}i:87;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1753;}i:88;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1753;}i:89;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1753;}i:90;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:" Compiler ";}i:2;i:1757;}i:91;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1767;}i:92;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"check the syntax";}i:2;i:1769;}i:93;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1785;}i:94;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" and ";}i:2;i:1787;}i:95;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1792;}i:96;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:"analyze the source code";}i:2;i:1794;}i:97;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1817;}i:98;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1819;}i:99;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1819;}i:100;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1819;}i:101;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1819;}i:102;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:" RESULT - ";}i:2;i:1823;}i:103;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1833;}i:104;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:14:"MANAGED MODULE";i:1;N;}i:2;i:1835;}i:105;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1853;}i:106;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:108:" (управляемый модуль). A managed module - standard windows portable executable (PE32) file.";}i:2;i:1855;}i:107;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1963;}i:108;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1963;}i:109;a:3:{i:0;s:11:"listo_close";i:1;a:0:{}i:2;i:1963;}i:110;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1963;}i:111;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:14:":wiki:comp.png";i:1;s:0:"";i:2;s:6:"center";i:3;s:3:"200";i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:1964;}i:112;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:1989;}i:113;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1990;}i:114;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1990;}i:115;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:28:"Combining MM into Assemblies";i:1;i:2;i:2;i:1990;}i:2;i:1990;}i:116;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1990;}i:117;a:3:{i:0;s:10:"listo_open";i:1;a:0:{}i:2;i:2030;}i:118;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2030;}i:119;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2030;}i:120;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:97:" Все ресурсные файлы и IL code , manifest собираются в сборки.";}i:2;i:2034;}i:121;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2131;}i:122;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2131;}i:123;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2131;}i:124;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2131;}i:125;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:62:" Сборками могут быть и dll и exe файлы";}i:2;i:2135;}i:126;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2197;}i:127;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2197;}i:128;a:3:{i:0;s:11:"listo_close";i:1;a:0:{}i:2;i:2197;}i:129;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2198;}i:130;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:23:"Executing Assembly Code";i:1;i:2;i:2;i:2198;}i:2;i:2198;}i:131;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:2198;}i:132;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2198;}i:133;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:2:"IL";i:1;N;}i:2;i:2234;}i:134;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:224:" - CPU-independent machine language, and is a much higher-level lan tham most CPU machine languages [access and manipulate objects, call virtual methods on objects, manipulate array elements directly, throw-catch exceptions]";}i:2;i:2240;}i:135;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2464;}i:136;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:2464;}i:137;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2464;}i:138;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2464;}i:139;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:" You can write in ";}i:2;i:2468;}i:140;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:2:"IL";i:1;N;}i:2;i:2486;}i:141;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:" - ILAsm.exe";}i:2;i:2492;}i:142;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2504;}i:143;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2504;}i:144;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2504;}i:145;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2504;}i:146;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:" You can disassemble ";}i:2;i:2508;}i:147;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:2:"IL";i:1;N;}i:2;i:2529;}i:148;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:" code - ILDasm.exe";}i:2;i:2535;}i:149;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2553;}i:150;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2553;}i:151;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:2553;}i:152;a:3:{i:0;s:10:"listo_open";i:1;a:0:{}i:2;i:2553;}i:153;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2553;}i:154;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2553;}i:155;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:46:" JITCompiler knows what method is being called";}i:2;i:2557;}i:156;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2603;}i:157;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2603;}i:158;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2603;}i:159;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2603;}i:160;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:81:" JITCompiler searches the defining assembly's metadata for the called method's IL";}i:2;i:2607;}i:161;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2688;}i:162;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2688;}i:163;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2688;}i:164;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2688;}i:165;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:71:" JITCompiler verifies and compiles IL code into native CPU instructions";}i:2;i:2692;}i:166;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2763;}i:167;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2763;}i:168;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2763;}i:169;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2763;}i:170;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:" Native CPU instructions are saved in a dynamically allocated block of memory";}i:2;i:2767;}i:171;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2844;}i:172;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2844;}i:173;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2844;}i:174;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2844;}i:175;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:93:" JITCompiler goes to the method and gives reference to block of memory with this instructions";}i:2;i:2848;}i:176;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2941;}i:177;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2941;}i:178;a:3:{i:0;s:11:"listo_close";i:1;a:0:{}i:2;i:2941;}i:179;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2941;}i:180;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:2942;}i:181;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:115:"СКОМПИЛИРОВАННЫЙ КОД УНИЧТОЖАЕТСЯ ПОСЛЕ ЗАВЕРШЕНИЯ ПРОГРАММЫ";}i:2;i:2944;}i:182;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:3059;}i:183;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:3061;}i:184;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3062;}i:185;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3062;}i:186;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:13:"CLI Languages";i:1;i:3;i:2;i:3062;}i:2;i:3062;}i:187;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3062;}i:188;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:3085;}i:189;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3085;}i:190;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3085;}i:191;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" A#: Ada.";}i:2;i:3089;}i:192;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3098;}i:193;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3098;}i:194;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3098;}i:195;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3098;}i:196;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:" Boo: inspired by Python.";}i:2;i:3102;}i:197;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3127;}i:198;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3127;}i:199;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3127;}i:200;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3127;}i:201;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:" C#";}i:2;i:3131;}i:202;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3134;}i:203;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3134;}i:204;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3134;}i:205;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3134;}i:206;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" C++/CLI";}i:2;i:3138;}i:207;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3146;}i:208;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3146;}i:209;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3146;}i:210;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3146;}i:211;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:80:" Cobra: static and dynamic typing, design by contract and built-in unit testing.";}i:2;i:3150;}i:212;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3230;}i:213;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3230;}i:214;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3230;}i:215;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3230;}i:216;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:" Component Pascal: strongly typed language";}i:2;i:3234;}i:217;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3276;}i:218;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3276;}i:219;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3276;}i:220;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3276;}i:221;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:" ClojureCLR: A native implementation of Clojure (a Lisp dialect)";}i:2;i:3280;}i:222;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3344;}i:223;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3344;}i:224;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3344;}i:225;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3344;}i:226;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:134:" Eiffel: Purely object-oriented language, focused on software quality, includes integrated design by contract and multiple inheritance";}i:2;i:3348;}i:227;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3482;}i:228;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3482;}i:229;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3482;}i:230;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3482;}i:231;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:82:" F#: functional programming and imperative object-oriented programming disciplines";}i:2;i:3486;}i:232;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3568;}i:233;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3568;}i:234;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3568;}i:235;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3568;}i:236;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:" IronPythonimplementation of Python";}i:2;i:3572;}i:237;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3607;}i:238;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3607;}i:239;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3607;}i:240;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3607;}i:241;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:33:" IronRuby: implementation of Ruby";}i:2;i:3611;}i:242;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3644;}i:243;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3644;}i:244;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3644;}i:245;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3644;}i:246;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:33:" IronLisp: implementation of Lisp";}i:2;i:3648;}i:247;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3681;}i:248;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3681;}i:249;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3681;}i:250;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3681;}i:251;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:59:" J#: implementation of Java | will be supported until 2015.";}i:2;i:3685;}i:252;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3744;}i:253;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3744;}i:254;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3744;}i:255;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3744;}i:256;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:44:" JScript .NET: implementation of ECMAScript ";}i:2;i:3748;}i:257;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3792;}i:258;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3792;}i:259;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3792;}i:260;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3792;}i:261;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:28:" L#: implementation of Lisp.";}i:2;i:3796;}i:262;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3824;}i:263;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3824;}i:264;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3824;}i:265;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3824;}i:266;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:101:" Managed JScript: A CLI implementation of JScript built on the DLR. Conforms to ECMAScript version 3.";}i:2;i:3828;}i:267;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3929;}i:268;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3929;}i:269;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3929;}i:270;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3929;}i:271;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:66:" Nemerle: A multi-paradigm language similar to C#, OCaml and Lisp.";}i:2;i:3933;}i:272;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3999;}i:273;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3999;}i:274;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3999;}i:275;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3999;}i:276;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:46:" Oxygene: An Object Pascal-based CLI language.";}i:2;i:4003;}i:277;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4049;}i:278;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4049;}i:279;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4049;}i:280;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4049;}i:281;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:36:" P#: A CLI implementation of Prolog.";}i:2;i:4053;}i:282;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4089;}i:283;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4089;}i:284;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4089;}i:285;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4089;}i:286;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:" Phalanger: An implementation of PHP with extensions for ASP.NET";}i:2;i:4093;}i:287;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4157;}i:288;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4157;}i:289;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4157;}i:290;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4157;}i:291;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:102:" Phrogram: A custom CLI language for beginners and intermediate users produced by The Phrogram Company";}i:2;i:4161;}i:292;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4263;}i:293;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4263;}i:294;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4263;}i:295;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4263;}i:296;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:" PowerBuilder: Can target CLI since version 11.1.";}i:2;i:4267;}i:297;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4316;}i:298;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4316;}i:299;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4316;}i:300;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4316;}i:301;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:83:" Synergy DBL .NET: an object oriented CLI compliant implementation of DBL and DIBOL";}i:2;i:4320;}i:302;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4403;}i:303;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4403;}i:304;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4403;}i:305;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4403;}i:306;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:80:" Team Developer: SQLWindows Application Language (SAL) since Team Developer 6.0.";}i:2;i:4407;}i:307;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4487;}i:308;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4487;}i:309;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4487;}i:310;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4487;}i:311;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:61:" VBx: A dynamic version of Visual Basic .NET built on the DLR";}i:2;i:4491;}i:312;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4552;}i:313;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4552;}i:314;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4552;}i:315;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4552;}i:316;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:65:" Visual Basic .NET (VB.NET): A redesigned dialect of Visual Basic";}i:2;i:4556;}i:317;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4621;}i:318;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4621;}i:319;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4621;}i:320;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4621;}i:321;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:70:" Visual COBOL: implementation of COBOL with object-oriented extensions";}i:2;i:4625;}i:322;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4695;}i:323;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4695;}i:324;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4695;}i:325;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4695;}i:326;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:58:" Windows PowerShell: An object-oriented command-line shell";}i:2;i:4699;}i:327;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4757;}i:328;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4757;}i:329;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:4757;}i:330;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4757;}i:331;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:4757;}}