
<h1 class="sectionedit1" id="сигналы">Сигналы</h1>
<div class="level1">

</div>
<!-- EDIT1 SECTION "Сигналы" [1-29] -->
<h2 class="sectionedit2" id="что_такое">Что такое</h2>
<div class="level2">

<p>
Сигналы — это средство, с помощью которого процессам можно передать сообщения о некоторых событиях в системе. 
</p>

</div>
<!-- EDIT2 SECTION "Что такое" [30-263] -->
<h2 class="sectionedit3" id="генерация_сигналов">Генерация сигналов</h2>
<div class="level2">

<p>
Сами процессы тоже могут генерировать сигналы, с помощью которых они передают определенные сообщения ядру и другим процессам. 
</p>

</div>
<!-- EDIT3 SECTION "Генерация сигналов" [264-545] -->
<h2 class="sectionedit4" id="для_чего">Для чего</h2>
<div class="level2">

<p>
С помощью сигналов можно осуществлять такие акции управления процессами, как приостановка процесса, запуск приостановленного процесса, завершение работы процесса. Всего в Linux существует 63 разных сигнала, их перечень можно посмотреть по команде
</p>

</div>
<!-- EDIT4 SECTION "Для чего" [546-1024] -->
<h2 class="sectionedit5" id="конвертация_в_числа">Конвертация в числа</h2>
<div class="level2">

<p>
Сигналы принято обозначать номерами или символическими именами. Все имена начинаются на SIG, но эту приставку иногда опускают: например, сигнал с номером 1 обозначают или как SIGHUP, или просто как HUP.
</p>

</div>
<!-- EDIT5 SECTION "Конвертация в числа" [1025-1430] -->
<h2 class="sectionedit6" id="послать_сигнал">Послать сигнал</h2>
<div class="level2">

<p>
pid – это идентификатор процесса, которому посылается сигнал, а номер – номер сигнала, который посылается процессу
</p>
<pre class="code">  kill [-signal] [--] pid
  kill -l </pre>

<p>
Если параметр –номер отсутствует, то посылается сигнал SIGTERM, обычно имеющий номер 15
</p>
<ul>
<li class="level1"><div class="li"> Число n &gt; 0 – определяет идентификатор процесса, которому будет доставлен сигнал.</div>
</li>
<li class="level1"><div class="li"> Число 0 – сигнал будет доставлен всем процессам текущей группы для данного управляющего терминала.</div>
</li>
<li class="level1"><div class="li"> Число -1 с предваряющей опцией – – сигнал будет доставлен (если позволяют полномочия) всем процессам с идентификаторами, большими 1.</div>
</li>
<li class="level1"><div class="li"> Число n &lt; 0, где n не равно -1, с предваряющей опцией – – сигнал будет доставлен всем процессам из группы процессов, идентификатор которой равен -n.</div>
</li>
</ul>

</div>
<!-- EDIT6 SECTION "Послать сигнал" [1431-2724] -->
<h3 class="sectionedit7" id="системный_вызов_kill">Системный вызов kill</h3>
<div class="level3">

<p>
pid описывает, кому посылается сигнал, а аргумент sig – какой сигнал посылается.
</p>
<pre class="code">  int kill(pid_t pid, int signal);</pre>
<ul>
<li class="level1"><div class="li"> Если pid &gt; 0 и sig &gt; 0, то сигнал номером sig (если позволяют привилегии) посылается процессу с идентификатором pid.</div>
</li>
<li class="level1"><div class="li"> Если pid = 0, а sig &gt; 0, то сигнал с номером sig посылается всем процессам в группе, к которой принадлежит посылающий процесс.</div>
</li>
<li class="level1"><div class="li"> Если pid = -1, sig &gt; 0 и посылающий процесс не является процессом суперпользователя, то сигнал посылается всем процессам в системе, для которых идентификатор пользователя совпадает с эффективным идентификатором пользователя процесса, посылающего сигнал.</div>
</li>
<li class="level1"><div class="li"> Если pid = -1, sig &gt; 0 и посылающий процесс является процессом суперпользователя, то сигнал посылается всем процессам в системе, за исключением системных процессов (обычно всем, кроме процессов с pid = 0 и pid = 1).</div>
</li>
<li class="level1"><div class="li"> Если pid &lt; 0, но не –1, sig &gt; 0, то сигнал посылается всем процессам из группы, идентификатор которой равен абсолютному значению аргумента pid (если позволяют привилегии).</div>
</li>
<li class="level1"><div class="li"> Если значение sig = 0, то производится проверка на ошибку, а сигнал не посылается, так как все сигналы имеют номера &gt; 0. Это можно использовать для проверки правильности аргумента pid (есть ли в системе процесс или группа процессов с соответствующим идентификатором).</div>
</li>
</ul>

</div>
<!-- EDIT7 SECTION "Системный вызов kill" [2725-4983] -->
<h2 class="sectionedit8" id="обработка_сигнала">Обработка сигнала</h2>
<div class="level2">

<p>
функция signal, возвращающая указатель на функцию с одним параметром типа int, которая ничего не возвращает, и имеющая два параметра: параметр sig типа int и параметр handler, служащий указателем на ничего не возвращающую функцию с одним параметром типа int.
</p>
<pre class="code">   void (*signal (int sig, void (*handler) (int)))(int);</pre>
<ul>
<li class="level1"><div class="li"> sig – это номер сигнала, обработку которого предстоит изменить</div>
</li>
<li class="level1"><div class="li"> handler описывает новый способ обработки сигнала</div>
</li>
</ul>

<p>
Системный вызов возвращает указатель на старый способ обработки сигнала, значение которого можно использовать для восстановления старого способа в случае необходимости.
</p>

</div>
<!-- EDIT8 SECTION "Обработка сигнала" [4984-] -->