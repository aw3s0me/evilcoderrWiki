
<h1 class="sectionedit1" id="виртуалная_фаловая_система">Виртуалная фаловая система</h1>
<div class="level1">

</div>
<!-- EDIT1 SECTION "Виртуалная фаловая система" [1-65] -->
<h2 class="sectionedit2" id="что_это">Что это</h2>
<div class="level2">

<p>
Независимые части всех файловых систем одинаковы и представляют для всех остальных элементов ядра абстрактную файловую систему, которую принято называть виртуальной файловой системой
</p>

<p>
Дает <strong>единообразный доступ</strong> приложений к <strong>различным типам файловых систем</strong>
</p>

</div>
<!-- EDIT2 SECTION "Что это" [66-576] -->
<h2 class="sectionedit3" id="отличия_от_обычной_файловой_системы">Отличия от обычной файловой системы</h2>
<div class="level2">
<ol>
<li class="level1"><div class="li"> В виртуальной файловой системе, в отличие от s5fs, каждый файл характеризуется не индексным узлом inode, а некоторым виртуальным узлом vnode.</div>
</li>
<li class="level1"><div class="li"> таблица виртуальных узлов открытых файлов вместа таблицы обычных узлов</div>
</li>
<li class="level1"><div class="li"> Прежде, чем приступить к работе с файлом, лежащим в некоторой другой файловой системе, мы должны встроить ее в уже существующий ациклический граф файлов.</div>
</li>
</ol>

</div>
<!-- EDIT3 SECTION "Отличия от обычной файловой системы" [577-1328] -->
<h2 class="sectionedit4" id="встраивание_в_существующую_файловую_систему">Встраивание в существующую файловую систему</h2>
<div class="level2">

<p>
Прежде, чем приступить к работе с файлом, лежащим в некоторой другой файловой системе, мы должны встроить ее в уже существующий ациклический граф файлов. Эта операция – операция над файловой системой – называется монтированием файловой системы (mount).
</p>
<pre class="code">  mount /dev/fd0 &lt;имя пустой директории&gt;</pre>

<p>
Разъединение смонтированной части
</p>
<pre class="code">  umount &lt;имя точки монтирования&gt;</pre>

</div>
<!-- EDIT4 SECTION "Встраивание в существующую файловую систему" [1329-] -->