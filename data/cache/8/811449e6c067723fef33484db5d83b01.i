a:117:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:20:"Исключения";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:150:"Исключение - ситуация, когда член не в состоянии решить возложенную на него задачу";}i:2;i:36;}i:5;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:186;}i:6;a:3:{i:0;s:10:"listo_open";i:1;a:0:{}i:2;i:186;}i:7;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:186;}i:8;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:186;}i:9;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:94:" Основывается на SEH - структурная обраб-а исключений";}i:2;i:190;}i:10;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:284;}i:11;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:284;}i:12;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:284;}i:13;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:284;}i:14;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:111:" Если в try нет исключения, то нету перехода в catch, а сразу в finally";}i:2;i:288;}i:15;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:399;}i:16;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:399;}i:17;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:399;}i:18;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:399;}i:19;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:54:" КОД в finally ВЫПОЛНЯЕТСЯ ВСЕГДА";}i:2;i:403;}i:20;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:457;}i:21;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:457;}i:22;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:457;}i:23;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:457;}i:24;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:73:" Все исключения производные от System.Exception";}i:2;i:461;}i:25;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:534;}i:26;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:534;}i:27;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:534;}i:28;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:534;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:59:" Просмотр блоков catch сверху вниз ";}i:2;i:538;}i:30;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"->";}i:2;i:597;}i:31;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:287:" более специализированные исключения нужно ставить выше, сначала самые младшие и в самом низу - System.Exception, иначе ошибка, так как в младшие будут недостижимыми";}i:2;i:599;}i:32;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:886;}i:33;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:886;}i:34;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:886;}i:35;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:886;}i:36;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:294:" Если есть в потоке необработанное исключение, то после его нахождения, CLR уничтожает этот поток. + в журнал записывается запись об исключении (приложение Event Viewer)";}i:2;i:890;}i:37;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1184;}i:38;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1184;}i:39;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1184;}i:40;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1184;}i:41;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:227:" При обнаружении catch CLR Исполняет внутренние блоки finally, при этом не один блок finally не выполняется до завершения дейсвтия с catch";}i:2;i:1188;}i:42;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1415;}i:43;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1415;}i:44;a:3:{i:0;s:11:"listo_close";i:1;a:0:{}i:2;i:1415;}i:45;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1415;}i:46;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"       try {";}i:2;i:1416;}i:47;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1428;}i:48;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:830:"         //здесь код, требующий обработки или очистки ресурсов
     }
     catch (InvalidOperationException) {
         //код к-ый восстанавливается после ошибки типа InvalidOperationException
     }
     catch (IOException) {
         //код к-ый восстанавливается после ошибки типа IOException
     }
     catch {
         //код к-ый восстанавливается после остальных исключений
         
         //после перехвата их обычно вбрасывают повторно
         throw;
     }
     finally {
         //код выполняющий очистку ресурсов
         посел операций начатых в try
     }";}i:2;i:1428;}i:49;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2296;}i:50;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:73:"Способ восстановления после исключения";i:1;i:3;i:2;i:2296;}i:2;i:2296;}i:51;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2296;}i:52;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:2379;}i:53;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2379;}i:54;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2379;}i:55;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:" Еще раз вбросить (throw;)";}i:2;i:2383;}i:56;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2423;}i:57;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2423;}i:58;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2423;}i:59;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2423;}i:60;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:199:" Вбросить исключение другого типа, передавая расположенному выше в стеке коду больше сведений об исключении";}i:2;i:2427;}i:61;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2626;}i:62;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2626;}i:63;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2626;}i:64;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2626;}i:65;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:" Позволить потоку покинуть блок catch";}i:2;i:2630;}i:66;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2694;}i:67;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2694;}i:68;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:2694;}i:69;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2695;}i:70;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:47:"CLS-совместимые исключения";i:1;i:3;i:2;i:2695;}i:2;i:2695;}i:71;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2695;}i:72;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2695;}i:73;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:108:"Для них используем catch без параметров. Если не попадет в catch ";}i:2;i:2753;}i:74;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"->";}i:2;i:2861;}i:75;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:24:" RunTimeWrappedException";}i:2;i:2863;}i:76;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2888;}i:77;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2888;}i:78;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"Контракты";i:1;i:3;i:2;i:2888;}i:2;i:2888;}i:79;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2888;}i:80;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2888;}i:81;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:152:"Позволяют проверить аргументы перед модификацией состояния. Проверка не проходит ";}i:2;i:2917;}i:82;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"->";}i:2;i:3069;}i:83;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:" исключение.";}i:2;i:3071;}i:84;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3094;}i:85;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3094;}i:86;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:14:"ПРАВИЛА";i:1;i:3;i:2;i:3094;}i:2;i:3094;}i:87;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3094;}i:88;a:3:{i:0;s:10:"listo_open";i:1;a:0:{}i:2;i:3118;}i:89;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3118;}i:90;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3118;}i:91;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:80:" Если юзаем lock, то в finally отключаем запирание";}i:2;i:3122;}i:92;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3202;}i:93;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3202;}i:94;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3202;}i:95;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3202;}i:96;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:68:" Если юзаем using, то в finally вызываем Dispose";}i:2;i:3206;}i:97;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3274;}i:98;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3274;}i:99;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3274;}i:100;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3274;}i:101;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:104:" Если юзаем foreach, то в finally для объекта IEnumerator вызываем Dispose";}i:2;i:3278;}i:102;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3382;}i:103;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3382;}i:104;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3382;}i:105;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3382;}i:106;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:135:" Если определяем деструктор, то в finally вызываем метод Finalize базового класса";}i:2;i:3386;}i:107;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3521;}i:108;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3521;}i:109;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3521;}i:110;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3521;}i:111;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:69:" НЕ НАДО ПЕРЕХВАТЫВАТЬ ВСЕ ИСКЛЮЧЕНИЯ";}i:2;i:3525;}i:112;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3594;}i:113;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3594;}i:114;a:3:{i:0;s:11:"listo_close";i:1;a:0:{}i:2;i:3594;}i:115;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3603;}i:116;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:3603;}}