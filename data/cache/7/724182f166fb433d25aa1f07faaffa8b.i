a:437:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:22:"The Common Type System";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:51:"Describes how types are defined and how they behave";}i:2;i:38;}i:5;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:90;}i:6;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:90;}i:7;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:11:"Consists of";i:1;i:3;i:2;i:90;}i:2;i:90;}i:8;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:90;}i:9;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:111;}i:10;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:111;}i:11;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:111;}i:12;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:115;}i:13;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:116;}i:14;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"Field";}i:2;i:118;}i:15;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:123;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:87:" - data variable that is part of the object's state. Fields identified by name and type";}i:2;i:125;}i:17;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:212;}i:18;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:212;}i:19;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:212;}i:20;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:212;}i:21;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:216;}i:22;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:217;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"Method";}i:2;i:219;}i:24;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:225;}i:25;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:135:" - Function that performs an operation on the object, changing the object's state. (method have name, siganture, modifiers, parameters)";}i:2;i:227;}i:26;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:362;}i:27;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:362;}i:28;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:362;}i:29;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:362;}i:30;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:366;}i:31;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:367;}i:32;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"Property";}i:2;i:369;}i:33;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:377;}i:34;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:38:" - validate input parameters/read only";}i:2;i:379;}i:35;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:417;}i:36;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:417;}i:37;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:417;}i:38;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:417;}i:39;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:421;}i:40;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:422;}i:41;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"Event";}i:2;i:424;}i:42;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:429;}i:43;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:41:" - notification mechanism between objects";}i:2;i:431;}i:44;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:472;}i:45;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:472;}i:46;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:472;}i:47;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:473;}i:48;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:16:"Access modifiers";i:1;i:3;i:2;i:473;}i:2;i:473;}i:49;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:473;}i:50;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:499;}i:51;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:499;}i:52;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:499;}i:53;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:503;}i:54;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:504;}i:55;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"Public";}i:2;i:506;}i:56;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:512;}i:57;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:48:" - member accessible by any code in any assemble";}i:2;i:514;}i:58;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:562;}i:59;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:562;}i:60;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:562;}i:61;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:562;}i:62;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:566;}i:63;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:567;}i:64;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"Private";}i:2;i:569;}i:65;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:576;}i:66;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:58:" - Accessible only by other members in the same class type";}i:2;i:578;}i:67;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:636;}i:68;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:636;}i:69;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:636;}i:70;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:636;}i:71;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:640;}i:72;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:641;}i:73;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"Family";}i:2;i:643;}i:74;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:649;}i:75;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:"  - Accessible by derived types ";}i:2;i:651;}i:76;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:683;}i:77;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"(protected modifier)";}i:2;i:685;}i:78;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:705;}i:79;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:707;}i:80;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:707;}i:81;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:707;}i:82;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:707;}i:83;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:711;}i:84;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:712;}i:85;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"Assembly";}i:2;i:714;}i:86;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:722;}i:87;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:" - member accessible by any code in the ";}i:2;i:724;}i:88;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:764;}i:89;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"SAME ASSEMBLE";}i:2;i:766;}i:90;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:779;}i:91;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:781;}i:92;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:782;}i:93;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:"(internal modifier)";}i:2;i:784;}i:94;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:803;}i:95;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:805;}i:96;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:805;}i:97;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:805;}i:98;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:805;}i:99;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:809;}i:100;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:810;}i:101;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"Family or Assembly";}i:2;i:812;}i:102;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:830;}i:103;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:86:" - accessible by derived types in any assemble ALSO by any types in the same assembly ";}i:2;i:832;}i:104;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:918;}i:105;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"(protected internal)";}i:2;i:920;}i:106;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:940;}i:107;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:942;}i:108;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:942;}i:109;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:942;}i:110;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:943;}i:111;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:9:"CTS RULES";i:1;i:3;i:2;i:943;}i:2;i:943;}i:112;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:943;}i:113;a:3:{i:0;s:10:"listo_open";i:1;a:0:{}i:2;i:962;}i:114;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:962;}i:115;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:962;}i:116;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:" ALL TYPES MUST INHERIT FROM A ";}i:2;i:966;}i:117;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:997;}i:118;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"PREDEFINED TYPE";}i:2;i:999;}i:119;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:1014;}i:120;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:": ";}i:2;i:1016;}i:121;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1018;}i:122;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"SYSTEM.OBJECT";}i:2;i:1020;}i:123;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1033;}i:124;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1035;}i:125;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1035;}i:126;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1035;}i:127;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1035;}i:128;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:117:" CLR автоматически инициализирует все локальные переменные 0 и null";}i:2;i:1039;}i:129;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1156;}i:130;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1156;}i:131;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1156;}i:132;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1156;}i:133;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:177:" ОБОБЩЕННЫЕ (GENERIC) типы БЕЗОПАСНЕЕ НЕОБОБЩЕННЫХ. Пространство потокобезопасных - System.Collections.Concurrent";}i:2;i:1160;}i:134;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1337;}i:135;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1337;}i:136;a:3:{i:0;s:11:"listo_close";i:1;a:0:{}i:2;i:1337;}i:137;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1338;}i:138;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:23:"Основы типов";i:1;i:2;i:2;i:1338;}i:2;i:1338;}i:139;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1338;}i:140;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:1373;}i:141;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1373;}i:142;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1373;}i:143;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:" Все типы - производные от ";}i:2;i:1377;}i:144;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:13:"System.Object";i:1;N;}i:2;i:1424;}i:145;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:54:" (методы Equals, GetHashCode, ToString, GetType)";}i:2;i:1441;}i:146;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1495;}i:147;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1495;}i:148;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1495;}i:149;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1495;}i:150;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:94:" Правило : Все объекты должны создаваться с помощью ";}i:2;i:1499;}i:151;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:3:"new";i:1;N;}i:2;i:1593;}i:152;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"!";}i:2;i:1600;}i:153;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1601;}i:154;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1601;}i:155;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1601;}i:156;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1601;}i:157;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:293:" Почти всегда нужно переопределять метод Equals класса System.Object, так как он дает true, если переменные УКАЗЫВАЮТ НА ОДИН И ТОТ ЖЕ ОБЪЕКТ, хотя есть метод ReferenceEquals(obja, objb)";}i:2;i:1605;}i:158;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1898;}i:159;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1898;}i:160;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:1898;}i:161;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1898;}i:162;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:182:" НИКОГДА НЕ ХРАНИТЬ ЗНАЧЕНИЯ ХЭШЕЙ (НАПРИМЕР В БАЗЕ). так как после обновления алгоритма, будет худо.";}i:2;i:1902;}i:163;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2084;}i:164;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2084;}i:165;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2084;}i:166;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2084;}i:167;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:200:" Ключевое слово dynamic помогает определить динамически тип. Поэтому var - опред тип в момент компиляции, dynamic - runtime";}i:2;i:2088;}i:168;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2288;}i:169;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2288;}i:170;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:2288;}i:171;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2288;}i:172;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:"      var obj1 - throw exception";}i:2;i:2289;}i:173;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2321;}i:174;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:21:"    dynamic obj1 - ok";}i:2;i:2321;}i:175;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2346;}i:176;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:31:"Привидение типов";i:1;i:2;i:2;i:2346;}i:2;i:2346;}i:177;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:2346;}i:178;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:2389;}i:179;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2389;}i:180;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2389;}i:181;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:148:" Во время выполнения всегда известен тип объекта (безопасность типов) (метод GetType)";}i:2;i:2393;}i:182;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2541;}i:183;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2541;}i:184;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2541;}i:185;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2541;}i:186;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:72:" Можно привести к базовому (явно-неявно)";}i:2;i:2545;}i:187;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2617;}i:188;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2617;}i:189;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2617;}i:190;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2617;}i:191;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:103:" К производному если определен явно оператор приведения";}i:2;i:2621;}i:192;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2724;}i:193;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2724;}i:194;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2724;}i:195;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2724;}i:196;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:75:" Проверка на типы с помощью оператора is, as";}i:2;i:2728;}i:197;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2803;}i:198;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2803;}i:199;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:2803;}i:200;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:68:"     if (o is Employee) {
         Employee e = (Employee) o;
     }";}i:2;i:2804;}i:201;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2804;}i:202;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:143:"Здесь проверка на тип осущ-ся 2 раза. если o==null, то возвращ is возвращ false
2 способ:";}i:2;i:2880;}i:203;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3023;}i:204;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:59:"     Employee e = o as Employee;
     if (e!=null) {
     }";}i:2;i:3023;}i:205;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3023;}i:206;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:83:"эфф-е чем просто опред типов
D производный от B";}i:2;i:3090;}i:207;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3173;}i:208;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:137:"     B b1 = new B();
     B b2 = new D();
     D d6 = (D)b1() - ошибка RTE
     D d5 = (D)b2() - все ок
     B b3 = b2; - ок";}i:2;i:3173;}i:209;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3323;}i:210;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:33:"Пространства имен";i:1;i:2;i:2;i:3323;}i:2;i:3323;}i:211;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:3323;}i:212;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:3368;}i:213;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3368;}i:214;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3368;}i:215;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:124:" Допустим, что в двух сборках объявлен класс Widget : Microsoft.Widget и MyAsmb.Widget;";}i:2;i:3372;}i:216;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3496;}i:217;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3496;}i:218;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3496;}i:219;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3496;}i:220;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:126:" Если мы их обе подлючим, то при создании объекта Widget w =new Widget() - ОШИБКА";}i:2;i:3500;}i:221;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3626;}i:222;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3626;}i:223;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3626;}i:224;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3626;}i:225;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:59:" Поэтому надо MyAsmb.Widget w =new MyAsmb.Widget";}i:2;i:3630;}i:226;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3689;}i:227;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3689;}i:228;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3689;}i:229;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3689;}i:230;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" ИЛИ ";}i:2;i:3693;}i:231;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3701;}i:232;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3701;}i:233;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:3701;}i:234;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:84:"     using MyAsmbWidgetO = MyAsmb.Widget
     MyAsmbWidgetO w = new MyAsmbWidgetO();";}i:2;i:3702;}i:235;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3702;}i:236;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:3792;}i:237;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:3794;}i:238;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:132:"Типы к одному пространству имен могут быть реализованы в разных сборках";}i:2;i:3796;}i:239;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:3928;}i:240;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:3930;}i:241;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3932;}i:242;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3934;}i:243;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:42:"Вз-ие типов, стека, кучи";i:1;i:2;i:2;i:3934;}i:2;i:3934;}i:244;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:3934;}i:245;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3989;}i:246;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:8:"Стек";i:1;i:4;i:2;i:3989;}i:2;i:3989;}i:247;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:3989;}i:248;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:4005;}i:249;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4005;}i:250;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4005;}i:251;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:318:" У процесса может быть много потоков. После создания потока выделяется стек памяти == 1МБ. Такая память исп-ся для передачи параметров в методы и хранения локальных переменных";}i:2;i:4009;}i:252;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4327;}i:253;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4327;}i:254;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4327;}i:255;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4327;}i:256;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:87:" Стеки заполняются от старших к младшим адресам";}i:2;i:4331;}i:257;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4418;}i:258;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4418;}i:259;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4418;}i:260;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4418;}i:261;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:104:" Методы содержат входной код (prologue code) и выходной (epilogue code)";}i:2;i:4422;}i:262;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4526;}i:263;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4526;}i:264;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4526;}i:265;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4526;}i:266;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:124:" Также адрес возврата также заталкивается в стек при вызове функции";}i:2;i:4530;}i:267;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4654;}i:268;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4654;}i:269;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:4654;}i:270;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4655;}i:271;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:8:"Куча";i:1;i:4;i:2;i:4655;}i:2;i:4655;}i:272;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:4655;}i:273;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4655;}i:274;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:29:":wiki:clr_via_csharp_f4.9.png";i:1;s:0:"";i:2;s:6:"center";i:3;s:3:"200";i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:4672;}i:275;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:4712;}i:276;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4713;}i:277;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4713;}i:278;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:31:"Примитивные типы";i:1;i:2;i:2;i:4713;}i:2;i:4713;}i:279;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:4713;}i:280;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:4756;}i:281;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4756;}i:282;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4756;}i:283;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:123:" Есть FCL-типы (System.String), а есть преобразованные к ним (using string = System.String)";}i:2;i:4760;}i:284;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4883;}i:285;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4883;}i:286;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4883;}i:287;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4883;}i:288;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:54:" int преобразуется в Int32 long в Int64";}i:2;i:4887;}i:289;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4941;}i:290;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4941;}i:291;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:4941;}i:292;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4942;}i:293;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:24:"Переполнение";i:1;i:4;i:2;i:4942;}i:2;i:4942;}i:294;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:4942;}i:295;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:4974;}i:296;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4974;}i:297;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4974;}i:298;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:4978;}i:299;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:4979;}i:300;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:172:"По умолчанию в c# режим проверки переполнения отключен, поэтому в c# есть 2 оператора checked и unchecked";}i:2;i:4981;}i:301;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:5153;}i:302;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:5155;}i:303;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:5155;}i:304;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:5155;}i:305;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:174:"     UInt32 invalid = unchecked((UInt32) -1); //ok, без проверки
     Byte b = 100; b = checked((Byte)(b+200)); //вброс исключения OverflowException";}i:2;i:5156;}i:306;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5156;}i:307;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:5336;}i:308;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5337;}i:309;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:5337;}i:310;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:5337;}i:311;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:5337;}i:312;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:70:" Также их можно использовать как блоки";}i:2;i:5341;}i:313;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:5411;}i:314;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:5411;}i:315;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:5411;}i:316;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:70:"     checked {
          Byte b=100;
          b=(Byte)(b+200);
     }";}i:2;i:5412;}i:317;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5412;}i:318;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:5492;}i:319;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5493;}i:320;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:5493;}i:321;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:5493;}i:322;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:5493;}i:323;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:5502;}i:324;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:5503;}i:325;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:285:"Для больших целых чисел есть супер типы (например System.Numeric.BigInteger) к-ые никогда не вбросят эксепшон перполнения, но могут вбросить исключения нехватки памяти";}i:2;i:5505;}i:326;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:5790;}i:327;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:5792;}i:328;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:5792;}i:329;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:5792;}i:330;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5793;}i:331;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:46:"Cсылочные и значимые типы";i:1;i:2;i:2;i:5793;}i:2;i:5793;}i:332;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:5793;}i:333;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:5851;}i:334;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:5851;}i:335;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:5851;}i:336;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:87:" Память для ссылочных выделяется всегда из кучи";}i:2;i:5855;}i:337;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:5942;}i:338;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:5942;}i:339;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:5942;}i:340;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:5942;}i:341;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:115:" Каждый объект в куче имеет доп члены подлежащие инициализации";}i:2;i:5946;}i:342;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6061;}i:343;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6061;}i:344;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6061;}i:345;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6061;}i:346;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:63:" Незанятые инф-ей байты обнуляются";}i:2;i:6065;}i:347;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6128;}i:348;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6128;}i:349;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6128;}i:350;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6128;}i:351;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:93:" Размещение в кучи иногда инициирует сборку мусора";}i:2;i:6132;}i:352;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6225;}i:353;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6225;}i:354;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:6225;}i:355;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6225;}i:356;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:150:"Если бы все типы были бы ссылочными то эффективность приложения упала бы, поэтому ";}i:2;i:6226;}i:357;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:6376;}i:358;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:36:"ВВЕЛИ ЗНАЧИМЫЕ ТИПЫ";}i:2;i:6378;}i:359;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:6414;}i:360;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:73:" (struct) (в стеке, поля в самой переменной) + ";}i:2;i:6416;}i:361;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:6489;}i:362;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:65:"не обрабатываются сборщиком мусора";}i:2;i:6491;}i:363;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:6556;}i:364;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6558;}i:365;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:6558;}i:366;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6558;}i:367;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:"Значимые типы 2ух типов:";}i:2;i:6564;}i:368;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6607;}i:369;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:6607;}i:370;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6607;}i:371;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6607;}i:372;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:58:" Структуры (Int32, Boolean, Decimal, TimeSpan) - ";}i:2;i:6611;}i:373;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:6669;}i:374;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:"потомки System.ValueType";}i:2;i:6671;}i:375;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:6702;}i:376;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6704;}i:377;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6704;}i:378;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:6704;}i:379;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:6704;}i:380;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:75:" Перечисления (DayOfWeek, FileAttributes, Drawing.FontStyle) - ";}i:2;i:6708;}i:381;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:6783;}i:382;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:"потомки от System.Enum";}i:2;i:6785;}i:383;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:6816;}i:384;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:41:", производного от ValueType";}i:2;i:6818;}i:385;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6859;}i:386;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6859;}i:387;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:6859;}i:388;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6859;}i:389;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"Пример:";}i:2;i:6860;}i:390;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6873;}i:391;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:242:"      class SomeRef; //ссылочный (слово class)
      struct SomeVal; //значимый (слово struct)
      SomeVal v1=v2; //при изменении значений v1, v2 не меняется, зато в SomeRef да";}i:2;i:6873;}i:392;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:7123;}i:393;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:90:"Условия использования значимых вместо ссылочных";i:1;i:4;i:2;i:7123;}i:2;i:7123;}i:394;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:7123;}i:395;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:7221;}i:396;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:7221;}i:397;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7221;}i:398;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:57:" Тип ведет себя как примитивный";}i:2;i:7225;}i:399;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7282;}i:400;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7282;}i:401;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:7282;}i:402;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7282;}i:403;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:75:" Типу не нужен любой тип в кач-ве базового";}i:2;i:7286;}i:404;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7361;}i:405;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7361;}i:406;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:7361;}i:407;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7361;}i:408;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:68:" Тип не будет иметь производных типов";}i:2;i:7365;}i:409;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7433;}i:410;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7433;}i:411;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:7433;}i:412;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:7433;}i:413;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:51:" Размер экземпляров мал (16 Б)";}i:2;i:7437;}i:414;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:7488;}i:415;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:7488;}i:416;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:7488;}i:417;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:7489;}i:418;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:69:"Преобразование значимого в ссылочный";i:1;i:4;i:2;i:7489;}i:2;i:7489;}i:419;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:7489;}i:420;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7489;}i:421;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:44:"Упаковка (boxing) для этого:";}i:2;i:7567;}i:422;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7612;}i:423;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:7612;}i:424;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:42:"Кортежи (Анонимный тип)";i:1;i:4;i:2;i:7612;}i:2;i:7612;}i:425;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:7612;}i:426;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:103:"     var o1 = new { Name = "Jeff", Year = 1964 };
     Console.WriteLine(o1.Name + o1.Year.ToString());";}i:2;i:7662;}i:427;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:7771;}i:428;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:35:"Арность дженериков";i:1;i:4;i:2;i:7771;}i:2;i:7771;}i:429;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:7771;}i:430;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7771;}i:431;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:113:"internal sealed class DictionaryStringKey<Tvalue>:Dictionary<String, TValue>{ }
t=typeof(DictionaryStringKey<>); ";}i:2;i:7815;}i:432;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:7928;}i:433;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:288:"1 параметр
Dictionary<,> - 2 параметра
  * where - ук-ет что тип в Т должен реализовывать обощенный интерефейс IComparable того же типа (Т)
      public static T Min<T>(T o1, T o2) where T : IComparable<T> {..}";}i:2;i:7930;}i:434;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7930;}i:435;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:7930;}i:436;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:7930;}}