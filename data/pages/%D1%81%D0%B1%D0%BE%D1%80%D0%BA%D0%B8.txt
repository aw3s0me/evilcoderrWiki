====== Сборки ======
  * [assembly: AssemblyTitle("MyDLL.dll")]
  * [assembly: AssemblyDescription("Blabla)"]
  * [assembly: AssemblyCompany("Aleks Korovin company")]
  * [assembly: AssemblyProduct("MyProduct")]
  * [assembly: AssemblyCopyright("Copyright (c) MyCompany 2012")]
  * [assembly: AssemblyVersion("3.0.0.0")]
==== Администрирование сборок ====
Для доступа к сборки, нужно поместить конфигурационный файл в каталог приложения. (файл состоит их XML). Для exe он должен распологаться в базовом каталоге приложения. Для ASP.NET Web Forms в виртуальном корневом каталоге веб приложения Web.config
==== Виды сборок ====
  - С нестрогими именами
  - С строгими
Идентичны по структуре . Но со строгими именами сборки подписаны с помощью пары ключей (открытого-закрытого), идентиф. издателя. Эти ключи обеспечивают безопасность, помогают управлять версиями, развертывать сборки в любом месте.
==== Развертывание сборок ====
  - Закрытое - развертывание в базовом каталоге (с нестрогим только такое)
  - Глобальное - в любом каталоге
СОВЕТ: лучше строгие имена, так как можно применить больше политик
==== Глобальный кэш сборок ====
Место где располгаются совместно используемые сборки - GAC (Global Assembly Cache) - C:\Windows\Assembly. Для тестирования и разработки сборок применяют утилиту - GACUtil.exe
==== Дружественные сборки ====
Если мы хотим, чтобы классы в сборках были internal, но были доступны друг другу, то надо использовать аттрибут InternalsVisibleTo:
        [assembly:InternalsVisibleTo("Microsoft, PublicKey=b88aa..fffeafwe")]
==== Влияние ключевых слов на упр-ие версиями компонентов ====
  * abstract - экземпляры нельзя создавать, член необходимо переопределить и реализовать в производном, потом их можно юзать.
  * virtual - тип-запрещен, член можно переопределить в производном
  * override - тип-запрещен, член переопределяется в производном типе
  * sealed - тип-запрещен, член нельзя переопределить в производном типе, применяют только к методу, переопределяющему виртуальный метод
  * new - применительно к вложенному типу, методу, св-ву, событию, константе или полю, член никак не свзяан с похожим членом, к-ый может существовать в базовом классе