====== Управление пользователями ======
В SQL Server двухуровневая настройка ограничения доступа к данным:
  - На первом уровне создаем учетную запись (login), дает подключение к серверу но не дает автоматического доступа к БД
  - На втором, выдать права как пользователю (user)
==== Понятия на уровне сервера ====
  * аутентификация
  * учетная запись
  * встроенные роли сервера
==== Понятия на уровне базы ====
  * пользователь БД
  * роль для БД
  * юзер роль для БД
==== Режимы аутентификации ====
  - Windows Auth
  - SQL Server Auth
===== Создание пользователя =====
Действия:
  - Создать уч. запись, указав пароль и по умолчанию имя БД (процедура **sp_addlogin**)
  - Добавить этого юзера во все БД (процедура **sp_adduser**)
  - предоставить привелегии (команда GRANT)
==== Пример первого действия ====
     sp_addlogin
     [@login=] 'учетная запись'
     [,[@password=] 'пароль']
     [,[@defdb=] 'база_данных_по_умолчанию']
     ..
     sp_addlogin 'student', 'stud', Institute
==== Добавление юзера в БД ====
     sp_adduser
     [@loginame=] 'учетная запись'
     [,[@name_in_db=] 'имя_пользователя']
     [,[@grpname] 'имя_роли']
     ..
     USE Institute;
     sp_adduser 'student';
===== Роли =====
Объекты которые определяют уровень доступа к объектам SQL Server.

2 вида ролей:
  * на уровне сервера
  * на уровне БД
==== Создание новой роли ====
     sp_addrole
     [@rolename=] 'имя_роли'
     [,[@ownername=] 'имя_владельца']
==== Добавление пользователя к роли ====  
     sp_addrolemember
     [@rolename=] 'имя_роли'
     [,[@membername=] 'имя_пользователя']   
==== Удаление пользователя из роли ====           
     sp_droprolemember
     [@rolename=] 'имя_роли',
     [@membername=] 'имя_пользователя'
==== Удаление роли ==== 
     sp_droprole
     [@rolename=] 'имя_роли'