====== Сети ======
===== Зачем объединяться в сети? =====
  * Совместное использование ресурсов
  * Возможность ускорения вычислений (несколько компов для исполнения)
  * Повышение надежность (один вышел из строя=заменил)
  * Взаимодействие/Общение пользователей
===== Типы организации ОС =====
  * Сетевая ОС - Чтобы исп-ть удаленные ресурсы юзер знает как это делать.
  * Распределенная ОС - юзер не знает, где файлы хранятся и выполняются
===== Взаимодействие удаленных процессов =====
  - Основа - передача сообщений-пакетов, так как общей памяти у разных компов нет
  - Процесс-отправитель и процесс-получатель функционируют под управлением одной и той же ОС. (передача инф-ии без посредников, посредники только если разная ОС)
  - ВС организуются исходя из вопросов надежности
  - Все объекты имеют адреса-уник ID в рамках ОС и уник ID в рамках всей сети
  - избежание race condition!
===== Типы ВС =====
  * LAN (Local Area Network)
  * WAN (Wide Area Network)
===== Многоуровневая модель построения ВС =====
Уровень N предоставляет сервисы уровню N+1, пользуясь уровнями N-1
  - Физический (hardware)
  - Канальный (передача д-ых по физическому уровню)
  - Сетевой (доставка инф-ии от узла отправителя к узлу получателя)
  - Транспортный (передача между удаленными процессами)
  - Сеансовый (вз-ие связывающихся процессов)
  - Уровень представления данных (представления данных)
  - Прикладной (интерфейс юзера и сети)
===== Типы адресов =====
  - Одноуровневые (сети не имеют адресов, только ВС имеют)
  - Двухуровневые (адрес = адрес сети (удаленный адрес) + адрес ВС (локальный адрес))
===== Разрешение адресов =====
Компьютер имеет символьное имя и нужно отобразить это имя в адресное пространство числовых адресов
  * существует файл, имеющий имена всех машин и их числовые эквиваленты, но он неудобен => создан DNS
  * На компьютере отправителе создается путь (послед-ть адресов), по к-му пройдет письмо
  * Одношаговая маршрутизация - компонент сети сам решает куда отправить
===== Локальная адресация. Понятие порта =====
PID неудобно юзать в кач-ве локального адреса адреса процесса => для локальной адресации int, при рождении закрепляет число
===== Полные адреса. Сокет =====
Полный адрес удаленного процесса = <Числовой адрес комп в сети, ПОРТ> - подобная пара именуется СОКЕТОМ
