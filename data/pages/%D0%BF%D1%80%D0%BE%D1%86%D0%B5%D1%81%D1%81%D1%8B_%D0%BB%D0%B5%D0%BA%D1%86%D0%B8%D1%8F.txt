====== Процессы ======
Внутри выч системы ПРОГРАММА == ПРОЦЕСС, в понятии активности, программа - статика, процесс - динамика, под к-ый выделены ресурсы.{{:wiki:4.gif?400|}}

  - Всякий новый процесс, появляющийся в системе, попадает в состояние готовность. 
  - Операционная система, пользуясь каким-либо алгоритмом планирования, выбирает один из готовых процессов и переводит его в состояние исполнение. 
  - В состоянии исполнение происходит непосредственное выполнение программного кода процесса.
===== Данные =====
Для управлением процесса, процесс описывается структурой данных**(PCB-Process Control Block)**:
  * программный счетчик процесса или, другими словами, адрес команды, которая должна быть выполнена для него следующей;
  * содержимое регистров процессора;
  * данные, необходимые для планирования использования процессора и управления памятью (приоритет процесса, размер и расположение адресного пространства и т. д.);
  * учетные данные (идентификационный номер процесса, какой пользователь инициировал его работу, общее время использования процессора данным процессом и т. д.);
  * сведения об устройствах ввода-вывода, связанных с процессом (например, какие устройства закреплены за процессом, таблицу открытых файлов).
===== Связи =====
Все процессы между собой связаны родственными связями

{{:wiki:5.gif?350|}}

===== Шаги создания =====
  - Выделение ресурсов
  - Занесение в адресное пространство (дубликат предка или другой)
  - После выполнения завершается
  - Удаляются ресурсы, но процесс остается в системе на нек время (почему умер запрос), такие процессы - процессы-зомби
==== Ресурсы ====
2 способа:
  - Разделение с предком от предка
  - Отдельно от ОС
===== Блокирование процесса =====
  * Процесс блокируется, когда он не может продолжать работу, не дождавшись возникновения какого-либо события в вычислительной системе.
  * Для этого он обращается к операционной системе с помощью определенного системного вызова. 
  * Операционная система обрабатывает системный вызов (инициализирует операцию ввода-вывода, 
  * добавляет процесс в очередь процессов, дожидающихся освобождения устройства или возникновения события, и т. д.) и, 
  * при необходимости сохранив нужную часть контекста процесса в его PCB, переводит процесс из состояния исполнение в состояние ожидание.