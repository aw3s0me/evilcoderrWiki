====== JITCompiler ======
Благодаря Jit компилятору, компилятор может очень быстро запустить методы без повторной их компиляции. То есть при первом разе он их скомпилировал и весь машинный код лежит в куче. Потом дополнительной компиляции не требуется. После завершения работы программы, куча очищается.
----
**System.Runtime.ProfileOptimization** - causes the CLR to record file what methods get JIT compiled while app is running. Потом JIT будет просто в другом потоке компилировать эти методы
==== Оптимизация машинного кода ====
Также Jit компилятор позволяет позволяет оптимизировать машинный код, при выполнении такой код гораздо производительней.
2 параметра влияют на оптимизацию:
/optimize и /debug
Над оптимизированным кодом хуже управлять отладкой, зато оптимизируется поток управления программой. Код становится меньше по размерам 
==== PDB файл ====
Также компилятор порождает Program Database file (PDB), если использован параметр /debug(+/full/pdbonly)

-Pdb file helps the debugger find local variables and map the IL instructions to source code

==== Минусы двойного компилирования ====
  * It hurts performance
  * Allocates dynamic memory